$( document ).ready( function () {

    $( 'style' ).append( typeStyles );
    
    replaceText();

});

$( window ).resize( function() {
    $( '.fr' ).each( function (index) { 
        var cssClassName = "fr-" + index;
        updateStyles($( this ), cssClassName);
    });
})

function replaceText() {
    $( '.fr' ).each( function (index) {
        // Init Styles
        var cssClassName = "fr-" + index;
        $( this ).addClass( cssClassName );

        var viewboxW = 72;

        updateStyles($( this ), cssClassName);

        // Get text
        var sourceText = $( this ).text();
        var sourceTextArr = sourceText.split(' ');
        
        var output = '';

        sourceTextArr.forEach( function ( e ) {
            e += ' ';

            // Add the SVG font word to the output var
            output += '<div style="display: inline-block">';

            for (var i = 0; i < e.length; i++ ){

                var c = e.charCodeAt(i)-32;

                output +=
                    '<svg x="0px" y="0px" viewBox="0 0 ' + viewboxW + ' 136">' +
                    characters[c] +
                    '</svg>';
            }

            output += '</div>';

        })

        $( this ).empty();
        $( this ).append( output );
    })
}

// Quick function to use to check presence of data attributes
function ifAvailable( variable, multiplier ) {
    if ( multiplier != null) {
        return variable * multiplier;
    } else {
        return variable;
    }
}

function updateStyles(target, cssClassName) {
    // Get styles
        var fontSize = target.css( 'font-size' );
        var letterSpacing = target.css( 'letter-spacing' );
        var color = target.css( 'color' );
        var stretch = target.data( 'stretch' );
        var skew = target.data( 'skew' );
        var fontWeight = target.css( 'font-weight' );

        // Set the default, max, and min
        var baseStrokeWeight = 1.1;
        var maxStrokeWeight = 4;
        var minStrokeWeight = 0.3;

        // Parse font weight to get stroke weight
        var strokeWeight = 1.1;

        // Basically, just use the font-weight above or below 400 as a modifier to the base
        if (fontWeight > 400) {
            var modifier = (fontWeight - 400) / 500 * (maxStrokeWeight - baseStrokeWeight);
            strokeWeight = baseStrokeWeight + modifier;


            // ..and add a little extra letter spacing to account for the newfound thickness
            letterSpacing += modifier;

        } else if (fontWeight < 400) {

            strokeWeight = baseStrokeWeight - ((400 - fontWeight) / 300 * (baseStrokeWeight - minStrokeWeight));

        };

        // Parse and add to DOM

        viewboxW = ifAvailable(72, stretch);;

        var inheritedStyles =  "." + cssClassName + " svg  {" +
                          "height:" + fontSize + ";" +
                          "margin-left:" + letterSpacing + ";" +
                          "transform: skew(-" + skew + "deg, 0);" +
                          "}" +
                          "." + cssClassName + " svg > * {" +
                          "stroke:" + color + ";" +
                          "stroke-width:" + strokeWeight + ";" +
                          "transform: scale(" + stretch + ", 1);" +
                          "}" + 
                          "." + cssClassName + " svg > circle {" +
                          "fill:" + color + ";" +
                          "}";

        $( 'style' ).append( inheritedStyles );
}

// FRANCESCO INLINE STROKED SVG TYPEFACE

const typeStyles = `    
                        body {
                            opacity: 1;
                        }
                            `

// Letters start at unicode 32, which is a black space. Each element is the innards for a 72x136px SVG.

const characters = [
    //SP 
    '',
    // !
    '<circle cx="36" cy="94.5" r="2.5"/><line x1="36" y1="9" x2="36" y2="72"/>',
    // "
    '<line x1="27.5" y1="9" x2="27.5" y2="27"/><line x1="45.5" y1="9" x2="45.5" y2="27"/>',
    // #
    '<line x1="19" y1="99" x2="37" y2="9"/><line x1="37" y1="99" x2="55" y2="9"/><line x1="12" y1="67.5" x2="57" y2="67.5"/><line x1="17" y1="40.5" x2="62" y2="40.5"/>',
    // $
    '<path d="M18,72c0,9.9,8.1,18,18,18h0c9.9,0,18-8.1,18-18v0c0-9.9-8.1-18-18-18h0.1C26.1,54,18,45.9,18,35.9v0c0-10,8.1-18.1,18.1-18.1h0c10,0,18.1,8.1,18.1,18.1"/><line x1="35.5" y1="9" x2="35.5" y2="99"/>', 
    // %
    '<line x1="9" y1="99" x2="63" y2="9"/><path d="M54,72L54,72c-5,0-9,4-9,9v9c0,5,4,9,9,9h0c5,0,9-4,9-9v-9C63,76,59,72,54,72z"/><path d="M18,36L18,36c-5,0-9-4-9-9v-9c0-5,4-9,9-9h0c5,0,9,4,9,9v9C27,32,23,36,18,36z"/>',
    // &
    '<path d="M57.8,99L22.9,42.6c-2.6-4.7-3.9-9.9-3.9-15.2v-4.9C19,15,25,9,32.5,9h0C40,9,46,15,46,22.5v0c0,8.3-3.3,16.3-9.2,22.2L19.1,65.9c-3.6,3.6-5.6,8.5-5.6,13.6v0.3c0,10.6,8.6,19.2,19.2,19.2h0c5.3,0,10.3-2.2,14-6l0,0c7.6-8,11.8-18.6,11.8-29.7v-0.8"/>',
    // '
    '<line x1="36" y1="9" x2="36" y2="27"/>',
    // (
    '<path d="M45,99L45,99c-9.9,0-18-8.1-18-18V27c0-9.9,8.1-18,18-18h0"/>',
    // )
    '<path d="M27,9L27,9c9.9,0,18,8.1,18,18v54c0,9.9-8.1,18-18,18h0"/>',
    // *
    '<line x1="36" y1="9" x2="36" y2="27"/><line x1="18.9" y1="21.4" x2="36" y2="27"/><line x1="25.4" y1="41.6" x2="36" y2="27"/><line x1="46.6" y1="41.6" x2="36" y2="27"/><line x1="53.1" y1="21.4" x2="36" y2="27"/>',
    // +
    '<line x1="18" y1="54" x2="54" y2="54"/><line x1="36" y1="36" x2="36" y2="72"/>',
    // ,
    '<line x1="36" y1="90" x2="36" y2="108"/>',
    // -
    '<line x1="18" y1="54" x2="54" y2="54"/>',
    // .
    '<circle cx="36" cy="94.5" r="2.5"/>',
    // /
    '<line x1="18" y1="99" x2="54" y2="9"/>',
    // 0
    '<path d="M18,27v54c0,9.9,8.1,18,18,18h0c9.9,0,18-8.1,18-18V27c0-9.9-8.1-18-18-18h0C26.1,9,18,17.1,18,27z"/>',
    // 1
    '<line x1="18" y1="99" x2="54" y2="99"/><path d="M18,9h12.7c2.9,0,5.3,2.3,5.3,5.2V99"/>',
    // 2
    '<path d="M18,27c0-9.9,7.9-18,17.8-18h0c9.8,0,17.8,8.1,17.8,18v8.6c0,5.6-2.6,10.9-7,14.3L25.3,66.2c-4.3,3.3-6.9,8.5-7,14L18,99h36"/>',
    // 3
    '<path d="M18,81c0,9.9,8.1,18,18,18h0c9.9,0,18-8.1,18-18v-9c0-9.9-8.1-18-18-18c9.9,0,18-8.1,18-18v-9c0-9.9-8.1-18-18-18h0c-9.9,0-18,8.1-18,18"/>',
    // 4
    '<path d="M18,9v39.9c0,2.8,2.3,5.1,5.1,5.1H54V9v90"/>',    
    // 5
    '<path d="M54,9H23.1c-2.8,0-5.1,2.3-5.1,5.1v34.9c0,2.8,2.3,5.1,5.1,5.1h14.1C46.5,54,54,61.5,54,70.8v11.3C54,91.5,46.5,99,37.2,99H18.5"/>',
    // 6
    '<path d="M18,72V27c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18"/><path d="M36,99L36,99c-9.9,0-18-8.1-18-18v-9c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18v9C54,90.9,45.9,99,36,99z"/>',
    // 7
    '<path d="M18,9h31.9c2.9,0,4.9,2.9,3.8,5.6L18,99"/>',
    // 8
    '<path d="M36,54L36,54c-9.9,0-18-8.1-18-18v-9c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18v9C54,45.9,45.9,54,36,54z"/><path d="M36,99L36,99c-9.9,0-18-8.1-18-18v-9c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18v9C54,90.9,45.9,99,36,99z"/>',
    // 9
    '<path d="M54,36v45c0,9.9-8.1,18-18,18h0c-9.9,0-18-8.1-18-18"/><path d="M36,9L36,9c9.9,0,18,8.1,18,18v9c0,9.9-8.1,18-18,18h0c-9.9,0-18-8.1-18-18v-9C18,17.1,26.1,9,36,9z"/>',
    // :
    '<circle cx="36" cy="94.5" r="2.5"/><circle cx="36" cy="40.5" r="2.5"/>',
    // ;
    '<circle cx="36" cy="40.5" r="2.5"/><line x1="36" y1="90" x2="36" y2="108"/>',
    // <
    '<path d="M54,99L19,57c-1.4-1.7-1.4-4.2,0-5.9L54,9"/>',
    // =
    '<line x1="18" y1="45" x2="54" y2="45"/><line x1="18" y1="63" x2="54" y2="63"/>',
    // >
    '<path d="M18,9l35,42c1.4,1.7,1.4,4.2,0,5.9L18,99"/>',
    // ?
    '<circle cx="36" cy="94.5" r="2.5"/><path d="M18,27.1C18,17.1,26.1,9,36,9h0c9.9,0,18,8.1,18,18.1v10.1c0,4.8-1.9,9.4-5.3,12.8l-7.5,7.5c-3.4,3.4-5.3,8-5.3,12.8V72"/>',
    // @
    '<path d="M36,72L36,72c-5,0-9-4-9-9V45c0-5,4-9,9-9h0c5,0,9,4,9,9v18C45,68,41,72,36,72z"/><path d="M45,35.5V63c0,5,4,9,9,9h0c5,0,9-4,9-9V35.5C63,20.9,51.1,9,36.5,9h-0.3C21.3,9,9,21.3,9,36.2v35.4C9,86.7,21.3,99,36.4,99h0"/>',
    // A
    '<line x1="18" y1="54" x2="54" y2="54"/><path d="M54,99V27c0-9.9-8.1-18-18-18h0c-9.9,0-18,8.1-18,18v72"/>',
    // B
    '<path d="M36,54H18V14.7c0-3.1,2.5-5.7,5.7-5.7H36c9.9,0,18,8.1,18,18v9C54,45.9,45.9,54,36,54z"/><path d="M36,54H18v39.3c0,3.1,2.5,5.7,5.7,5.7H36c9.9,0,18-8.1,18-18v-9C54,62.1,45.9,54,36,54z"/>',
    // C
    '<path d="M54,81c0,9.9-8.1,18-18,18h0c-9.9,0-18-8.1-18-18V27c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18"/>',
    // D
    '<path d="M36,99H23.7c-3.1,0-5.7-2.5-5.7-5.7V14.7c0-3.1,2.5-5.7,5.7-5.7H36c9.9,0,18,8.1,18,18v54C54,90.9,45.9,99,36,99z"/>',
    // E
    '<path d="M54,99H23.5c-3.1,0-5.5-2.5-5.5-5.5V14.5c0-3.1,2.5-5.5,5.5-5.5H54"/><line x1="36" y1="54" x2="18" y2="54"/>',
    // F
    '<path d="M18,99V14.2c0-2.9,2.4-5.2,5.2-5.2H54"/><line x1="45" y1="54" x2="18" y2="54"/>',
    // G
    '<path d="M54,27c0-9.9-8.1-18-18-18h0c-9.9,0-18,8.1-18,18v54c0,9.9,8.1,18,18,18h0c9.9,0,18-8.1,18-18V59.7c0-3.1-2.5-5.7-5.7-5.7H36"/>',
    // H
    '<line x1="18" y1="99" x2="18" y2="9"/><line x1="54" y1="9" x2="54" y2="99"/><line x1="18" y1="54" x2="54" y2="54"/>',
    // I
    '<line x1="18" y1="9" x2="54" y2="9"/><line x1="18" y1="99" x2="54" y2="99"/><line x1="36.2" y1="9" x2="35.8" y2="99"/>',
    // J
    '<path d="M18,81c0,9.9,8.1,18,18,18h0c9.9,0,18-8.1,18-18V15.3c0-3.5-2.8-6.3-6.3-6.3H27"/>',
    // K
    '<line x1="18" y1="9" x2="18" y2="99"/><path d="M36,54L36,54c9.9,0,18,8.1,18,18v27"/><path d="M54,9v27c0,9.9-8.1,18-18,18H18"/>',
    // L
    '<path d="M54,99H24.2c-3.4,0-6.2-2.8-6.2-6.2V9"/>',
    // M
    '<path d="M15,99V12.1c0-3.1,3.2-4.2,4.4-1.6l14.5,43c0.9,2,3.2,2,4.1,0l14.5-43C53.8,7.8,57,9,57,12.1V99"/>',
    // N
    '<path d="M18,99V12.1c0-3.4,4.7-4.3,5.9-1.1l24.2,86.1c1.3,3.1,5.9,2.2,5.9-1.1V9"/>',
    // O
    '<path d="M36,99L36,99c-9.9,0-18-8.1-18-18V27c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18v54C54,90.9,45.9,99,36,99z"/>',
    // P
    '<path d="M18,54h18c9.9,0,18-8.1,18-18v-9c0-9.9-8.1-18-18-18H23.7c-3.1,0-5.7,2.5-5.7,5.7V45v54"/>',
    // Q
    '<line x1="54" y1="99" x2="36" y2="81"/><path d="M36,99L36,99c-9.9,0-18-8.1-18-18V27c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18v54C54,90.9,45.9,99,36,99z"/>',
    // R
    '<path d="M36,54L36,54c9.9,0,18,8.1,18,18v27"/><path d="M18,54h18c9.9,0,18-8.1,18-18v-9c0-9.9-8.1-18-18-18H23.7c-3.1,0-5.7,2.5-5.7,5.7V45v54"/>',
    // S
    '<path d="M18,81c0,9.9,8.1,18,18,18h0c9.9,0,18-8.1,18-18v-9c0-9.9-8.1-18-18-18c-9.9,0-18-8.1-18-18v-9c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18"/>',
    // T
    '<line x1="18" y1="9" x2="54" y2="9"/><line x1="36" y1="9" x2="36" y2="99"/>',
    // U
    '<path d="M54,9v72c0,9.9-8.1,18-18,18h0c-9.9,0-18-8.1-18-18V9"/>',
    // V
    '<path d="M18,9l15,87.5c0.7,3.3,5.4,3.3,6,0L54,9"/>',
    // W
    '<path d="M9,9l7.8,87.2c0.3,3.2,4.7,3.8,5.9,0.8L33.2,56c1-2.6,4.7-2.6,5.7,0l10.5,41.1c1.2,3,5.6,2.4,5.9-0.8L63,9"/>',
    // X
    '<line x1="18" y1="9" x2="54" y2="99"/><line x1="54" y1="9" x2="18" y2="99"/>',
    // Y
    '<path d="M18,9l15.2,43.1c1,2.6,4.7,2.6,5.7,0L54,9"/><line x1="36" y1="54" x2="36" y2="99"/>',
    // Z
    '<path d="M18,9h30.3c4,0,6.7,4,5.3,7.8L18.4,91.2C16.9,95,19.7,99,23.7,99H54"/>',
    // [
    '<path d="M45,99H32.9c-3.2,0-5.9-2.6-5.9-5.9V14.9c0-3.2,2.6-5.9,5.9-5.9H45"/>',
    // \
    '<line x1="18" y1="9" x2="54" y2="99"/>',
    // ]
    '<path d="M27,9h12.1c3.2,0,5.9,2.6,5.9,5.9v78.2c0,3.2-2.6,5.9-5.9,5.9H27"/>',
    // ^
    '<polyline points="18,36 36,9 54,36 "/>',
    // _
    '<line x1="9" y1="99" x2="63" y2="99"/>',
    // `
    '<line x1="27" y1="9" x2="45" y2="27"/>',
    // a
    '<path d="M54,36l0,58.5c0,2.5,2.2,4.5,5,4.5h0"/><path d="M54,81c0,9.9-8.1,18-18,18h0c-9.9,0-18-8.1-18-18V54c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18"/>',
    // b
    '<path d="M18,9l0,85.5c0,2.5-2.2,4.5-5,4.5h0"/><path d="M18,81c0,9.9,8.1,18,18,18h0c9.9,0,18-8.1,18-18V54c0-9.9-8.1-18-18-18h0c-9.9,0-18,8.1-18,18"/>',
    // c
    '<path d="M54,81c0,9.9-8.1,18-18,18h0c-9.9,0-18-8.1-18-18V54c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18"/>',
    // d
    '<path d="M54,9l0,85.5c0,2.5,2.2,4.5,5,4.5h0"/><path d="M54,81c0,9.9-8.1,18-18,18h0c-9.9,0-18-8.1-18-18V54c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18"/>',
    // e
    '<path d="M54,81c0,9.9-8.1,18-18,18h0c-9.9,0-18-8.1-18-18V54c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18v4c0,2.8-2.2,5-5,5l-31,0"/>',
    // f
    '<line x1="18" y1="63" x2="45" y2="63"/><path d="M54,27c0-9.9-8.1-18-18-18h0c-9.9,0-18,8.1-18,18v72"/>',
    // g
    '<path d="M54,81c0,9.9-8.1,18-18,18h0c-9.9,0-18-8.1-18-18V54c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18"/><path d="M20.8,117.7c3.2,5,8.8,8.3,15.2,8.3h0c9.9,0,18-8,18-17.9V40.5c0-2.5,2-4.5,4.5-4.5h0"/>',
    // h
    '<path d="M54,99V54c0-9.9-8.1-18-18-18h0c-9.9,0-18,8.1-18,18v45"/><line x1="18" y1="9" x2="18" y2="54"/>',
    // i
    '<path d="M36,99V41c0-2.8-2.2-5-5-5H18"/><circle cx="36" cy="13.5" r="2.5"/><line x1="18" y1="99" x2="54" y2="99"/>',
    // j
    '<circle cx="36" cy="13.5" r="2.5"/><path d="M17.9,36h12.8c2.7,0,5,2.2,5,5v58.4v10.7c0,8.8-7.1,15.9-15.7,15.9h0c-8.7,0-15.7-7.1-15.7-15.9"/>',
    // k
    '<line x1="18" y1="99" x2="18" y2="9"/><path d="M18,63h9c13,0,23-11.1,23-23.5V36"/><path d="M54,99v-9c0-14.6-12.7-27-27.1-27H18"/>',
    // l
    '<path d="M36,99V14c0-2.8-2.2-5-5-5H18"/><line x1="18" y1="99" x2="54" y2="99"/>',
    // m
    '<path d="M36,99V47c0-6.1-4.9-11-11-11h0c-6.1,0-11,4.9-11,11v52"/><path d="M14,47v-7c0-2.2-1.8-4-4-4h0"/><path d="M58,99V47c0-6.1-4.9-11-11-11h0c-6.1,0-11,4.9-11,11"/>',
    // n
    '<path d="M18,54V41.5c0-3.6-2.2-5.5-5-5.5h0"/><path d="M54,99V54c0-9.9-8.1-18-18-18h0c-9.9,0-18,8.1-18,18v45"/>',
    // o
    '<path d="M36,99L36,99c-9.9,0-18-8.1-18-18V54c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18v27C54,90.9,45.9,99,36,99z"/>',
    // p
    '<path d="M18,54c0-9.9,8.1-18,18-18h0c9.9,0,18,8.1,18,18v27c0,9.9-8.1,18-18,18h0c-9.9,0-18-8.1-18-18"/><path d="M18,126V40.5c0-2.5-2-4.5-4.5-4.5h0"/>',
    // q
    '<path d="M54,54c0-9.9-8.1-18-18-18h0c-9.9,0-18,8.1-18,18v27c0,9.9,8.1,18,18,18h0c9.9,0,18-8.1,18-18"/><path d="M54,126V40.5c0-2.5,2-4.5,4.5-4.5h0"/>',
    // r
    '<path d="M18,54V41.5c0-3.6-2.2-5.5-5-5.5h0"/><path d="M54,54c0-9.9-8.1-18-18-18h0c-9.9,0-18,8.1-18,18v45"/>',
    // s
    '<path d="M18,83.3C18,91.9,26.1,99,36,99h0c9.9,0,18-7.1,18-15.7v0c0-8.7-8.1-15.7-18-15.7c-9.9,0-18-7.1-18-15.7v0C18,43.1,26.1,36,36,36h0c9.9,0,18,7.1,18,15.7"/>',
    // t
    '<path d="M18,9v72c0,9.9,8.1,18,18,18h0c9.9,0,18-8.1,18-18"/><line x1="18" y1="36.5" x2="45" y2="36.5"/>',
    // u
    '<path d="M54,81v12.5c0,3.6,2.2,5.5,5,5.5h0"/><path d="M54,36v45c0,9.9-8.1,18-18,18h0c-9.9,0-18-8.1-18-18V36"/>',
    // v
    '<path d="M18,36l15.7,61.3c0.7,2.3,4,2.3,4.6,0L54,36"/>',
    // w
    '<path d="M9,36l7.7,61c0.3,2.4,3.7,2.8,4.6,0.5l12.4-42c0.8-2,3.7-2,4.5,0l12.4,42c0.9,2.2,4.3,1.9,4.6-0.5L63,36"/>',
    // x
    '<line x1="18" y1="36" x2="54" y2="99"/><line x1="54" y1="36" x2="18" y2="99"/>',
    // y
    '<path d="M18,36v45c0,9.9,8.1,18,18,18h0c9.9,0,18-8.1,18-18V36"/><path d="M54,81v27c0,9.9-8.1,18-18,18h0c-6.2,0-11.7-3.1-14.9-7.9"/>',
    // z
    '<path d="M18,36h33.6c1.8,0,3,2,2,3.6L18.3,95.4c-0.9,1.6,0.2,3.6,2,3.6H54"/>',
    // {
    '<path d="M45,99L45,99c-9.9,0-18-8.1-18-18V63c0-5-4-9-9-9h0h0c5,0,9-4,9-9V27c0-9.9,8.1-18,18-18h0"/>',
    // |
    '<line x1="35.8" y1="9" x2="36.2" y2="108"/>',
    // }
    '<path d="M27.2,9L27.2,9c9.9,0,18,8.1,18,18v18c0,5,4,9,9,9h0h0c-5,0-9,4-9,9v18c0,9.9-8.1,18-18,18h0"/>',
    // ~
    '<path d="M9,58.7l7.9-6c5.8-4.4,14-3.9,19.1,1.3l0,0c5.2,5.2,13.3,5.7,19.1,1.3l7.9-6"/>'
]